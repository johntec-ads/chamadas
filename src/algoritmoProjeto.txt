1 - Resetar os estilos - index.css

CRIANDO PROJETO:
2 - Configurar navegação de páginas:
  a - pasta assets para imagens.
  b - pasta SignIn (login).
  c - pasta SignUp (Cadastro).

CRIANDO ROTAS:
3 - Bibliotécas:
  a - npm instal react-router-dom
  b - pasta routes.
  c - Component RoutesApp
    c.1 - import Routes e Route dom
    react-router-dom.
  d - Component App 
    d.1 import BrouserRouter do RRD e 
    o component RoutesApp.
    d.2 Roteando e renderizando Component RouterApp 
    com BrowserRouter

TELA DE LOGIN:
4 - Component SignIn
  a - criar style.css
  b - 
  c - importar img logo
  d - importar useState para os valores dos inputs.
  e - Criação dos estados 'state'.
  f - Configuração dos inputs.
  g - importar Link do RRD.
  h - estilizar o component.
  
  TELA DE REGISTRO
5 - Componet signUp
  a - import img Logo
  b - copia codigo SignIn
  c - copia signin.css
  d - copia input para Nome.
  e - edita codigo.

  CRIA COMPONENTE DASHBOARD
6 - Dentro de pages
  a - Cria pasta Dashboard.
  b - cria index.js.
  c - cria Component Dashboard

  FIREBASE CONFIG.
7 - Pasta services
  a - Cria firebaseConections.js
  b - Cria novo projeto firebase.
  c - import a cont firebaseConfig p/
  firebaseConection.js .
  d - Realiza os import de :
import { initializeApp } from 'firebase/app';
import { getAuth } from 'firebase/auth';
import { Firestore } from 'firebase/firestore';
import { getStorage } from 'firebase/storage';


  CADASTRO E LOGIN
8 - SignUp
  a - Atribui ao element de formulário 'form'
   um evento de  onSubmit={} 
    1.0 Cria function "handleSubmit(e)" para submiter
    o formulário à executar algo.
    1.2 Atribuo a function ao onSubmit={handleSubmit}
    1.3 e.prenventDefault()
    1.4 If se name, email e password
    estão diferentes de vazio.

    CRIANDO CONTEXT API
  9 - contextapi
    a -  Dentro de src, cria-se uma pasta 
    contexts ,dentro da pasta criamos o arquivo
    auth.js .
  b - importar do React {useState, createContext,
  useEffect}.
  c - Inicializar e  exportar o contexto
  com um objeto vazio.
  d -  Criar um component
  que será o provedor de 
  contexto.
  e - Passa um value ao AuthContext.
  Provider, para receber as proprs 
  necessárias e repassa-las em seguida
  f - Cria a state user, e dentro do
  value, criou-se uma props que faz uma
  verificação, e convert o valor para 
  true ou false se usuário estiver logado
  ou não;

COMPONENT APP 
  10 - Importar o contexto AuthProvider
  a -  Envolver as rotas 'RoutesApp' com o 
  'AuthProvider'




  


